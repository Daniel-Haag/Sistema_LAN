//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MaisUmaTentativaServer.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://microsoft.com/webservices/", ConfigurationName="ServiceReference1.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAutenticaAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAutenticaAdvogado(string login, string senha, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAutenticaAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAutenticaAdvogadoAsync(string login, string senha, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAutenticaSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAutenticaSociedade(string login, string senha, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAutenticaSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAutenticaSociedadeAsync(string login, string senha, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAutenticagrupo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAutenticagrupo(string login, string senha, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAutenticagrupo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAutenticagrupoAsync(string login, string senha, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDadosCadastraisaSociedade(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDadosCadastraisaSociedadeAsync(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaGrupos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDadosCadastraisaGrupos(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaGrupos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDadosCadastraisaGruposAsync(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaAdvogados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDadosCadastraisaAdvogados(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaAdvogados", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDadosCadastraisaAdvogadosAsync(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNoticias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNoticias(string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNoticias", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNoticiasAsync(string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsQuantNotasExpAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsQuantNotasExpAdvogado(string idAdvogado, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsQuantNotasExpAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsQuantNotasExpAdvogadoAsync(string idAdvogado, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCidades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsCidades(string chave, string siglaUF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCidades", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsCidadesAsync(string chave, string siglaUF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsEstados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsEstados(string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsEstados", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsEstadosAsync(string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsQuantNotasExpSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsQuantNotasExpSociedade(string idSociedade, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsQuantNotasExpSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsQuantNotasExpSociedadeAsync(string idSociedade, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsQuantNotasExpGrupo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsQuantNotasExpGrupo(string idSociedade, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsQuantNotasExpGrupo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsQuantNotasExpGrupoAsync(string idSociedade, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsReceberTribunaisAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsReceberTribunaisAdvogado(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsReceberTribunaisAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsReceberTribunaisAdvogadoAsync(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsLoginLanServerOAB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABResponse wsLoginLanServerOAB(MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores de retorno.
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsLoginLanServerOAB", ReplyAction="*")]
        System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABResponse> wsLoginLanServerOABAsync(MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCadastrarUsuarioLanServerOAB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABResponse wsCadastrarUsuarioLanServerOAB(MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores de retorno.
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCadastrarUsuarioLanServerOAB", ReplyAction="*")]
        System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABResponse> wsCadastrarUsuarioLanServerOABAsync(MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCadastrarMaquinaLanServerOAB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsCadastrarMaquinaLanServerOAB(string IPmaquina, string subSecao, string txtTempoSessao, int statusMaquina, string numeroMaquina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCadastrarMaquinaLanServerOAB", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsCadastrarMaquinaLanServerOABAsync(string IPmaquina, string subSecao, string txtTempoSessao, int statusMaquina, string numeroMaquina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanSe" +
            "rverOAB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanServerOAB(int numeroMaquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanSe" +
            "rverOAB", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanServerOABAsync(int numeroMaquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaTextoElabelsDeStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int wsAtualizaTextoElabelsDeStatus(int numeroMaquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaTextoElabelsDeStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<int> wsAtualizaTextoElabelsDeStatusAsync(int numeroMaquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsPintaGroupBoxesConformeStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int wsPintaGroupBoxesConformeStatus(string numeroMaquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsPintaGroupBoxesConformeStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<int> wsPintaGroupBoxesConformeStatusAsync(string numeroMaquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsBuscarTempoSessaoMaquinas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasResponse wsBuscarTempoSessaoMaquinas(MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores de retorno.
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsBuscarTempoSessaoMaquinas", ReplyAction="*")]
        System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasResponse> wsBuscarTempoSessaoMaquinasAsync(MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsSinalizarMaquinasInicioSessao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int wsSinalizarMaquinasInicioSessao(int updateStatusMaquina, string maquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsSinalizarMaquinasInicioSessao", ReplyAction="*")]
        System.Threading.Tasks.Task<int> wsSinalizarMaquinasInicioSessaoAsync(int updateStatusMaquina, string maquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsBuscarNumeroMaquina", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsBuscarNumeroMaquina(string IPCliente, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsBuscarNumeroMaquina", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsBuscarNumeroMaquinaAsync(string IPCliente, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsSinalizarMaquinasFimSessao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int wsSinalizarMaquinasFimSessao(int updateStatusMaquina, string maquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsSinalizarMaquinasFimSessao", ReplyAction="*")]
        System.Threading.Tasks.Task<int> wsSinalizarMaquinasFimSessaoAsync(int updateStatusMaquina, string maquina, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizarIPservidor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void wsAtualizarIPservidor(string subSecao, string IPServidorSubSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizarIPservidor", ReplyAction="*")]
        System.Threading.Tasks.Task wsAtualizarIPservidorAsync(string subSecao, string IPServidorSubSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsListagemDeMaquinas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] wsListagemDeMaquinas(string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsListagemDeMaquinas", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> wsListagemDeMaquinasAsync(string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsConfigurarSessao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoResponse wsConfigurarSessao(MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores de retorno.
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsConfigurarSessao", ReplyAction="*")]
        System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoResponse> wsConfigurarSessaoAsync(MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDescobrirServidorAtualizarDados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDescobrirServidorAtualizarDados(string subSecao, string IPClient, string nomeMaquina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDescobrirServidorAtualizarDados", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDescobrirServidorAtualizarDadosAsync(string subSecao, string IPClient, string nomeMaquina);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNomearMaquina", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void wsNomearMaquina(string nomeMaquina, string maquinaIP, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNomearMaquina", ReplyAction="*")]
        System.Threading.Tasks.Task wsNomearMaquinaAsync(string nomeMaquina, string maquinaIP, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCadastrarSubSecao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoResponse wsCadastrarSubSecao(MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoRequest request);
        
        // CODEGEN: Gerando contrato de mensagem porque a operação tem vários valores de retorno.
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsCadastrarSubSecao", ReplyAction="*")]
        System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoResponse> wsCadastrarSubSecaoAsync(MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsListagemDeSubSecoes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] wsListagemDeSubSecoes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsListagemDeSubSecoes", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> wsListagemDeSubSecoesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsListagemDeUsuarios", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] wsListagemDeUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsListagemDeUsuarios", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> wsListagemDeUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsExcluirSubSecao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool wsExcluirSubSecao(string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsExcluirSubSecao", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> wsExcluirSubSecaoAsync(string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsExcluirUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool wsExcluirUsuario(string nomeUsuario, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsExcluirUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> wsExcluirUsuarioAsync(string nomeUsuario, string subSecao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsReceberEmailsAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsReceberEmailsAdvogado(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsReceberEmailsAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsReceberEmailsAdvogadoAsync(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNotasExpedienteAdvogado(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNotasExpedienteAdvogadoAsync(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDigital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDigital(string NumeroOAB, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDigital", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDigitalAsync(string NumeroOAB, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteAdvogadoPaginacao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNotasExpedienteAdvogadoPaginacao(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteAdvogadoPaginacao", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNotasExpedienteAdvogadoPaginacaoAsync(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNotasExpedienteSociedade(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNotasExpedienteSociedadeAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteSociedadePaginacao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNotasExpedienteSociedadePaginacao(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteSociedadePaginacao", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNotasExpedienteSociedadePaginacaoAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteGrupo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNotasExpedienteGrupo(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteGrupo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNotasExpedienteGrupoAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteGrupoPaginacao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsNotasExpedienteGrupoPaginacao(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsNotasExpedienteGrupoPaginacao", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsNotasExpedienteGrupoPaginacaoAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaPrimeiroAcessoAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaPrimeiroAcessoAdvogado(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaPrimeiroAcessoAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaPrimeiroAcessoAdvogadoAsync(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaPrimeiroAcessoSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaPrimeiroAcessoSociedade(string idSociedade, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaPrimeiroAcessoSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaPrimeiroAcessoSociedadeAsync(string idSociedade, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaReceberTribunalAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaReceberTribunalAdvogado(string idAdvogado, string trueORfalse, string listaIdTribunal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaReceberTribunalAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaReceberTribunalAdvogadoAsync(string idAdvogado, string trueORfalse, string listaIdTribunal, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaReceberEmailAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaReceberEmailAdvogado(string idAdvogado, string idEmailAdvogado, string comando, string email, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaReceberEmailAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaReceberEmailAdvogadoAsync(string idAdvogado, string idEmailAdvogado, string comando, string email, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaDevice(string idAdvogado, string idSociedade, string token, string UDID, string comando, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaDeviceAsync(string idAdvogado, string idSociedade, string token, string UDID, string comando, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaCadastroAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaCadastroAdvogado(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdAdvogadoAtualizacao, 
                    string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaCadastroAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaCadastroAdvogadoAsync(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdAdvogadoAtualizacao, 
                    string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaCadastroSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaCadastroSociedade(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdSociedadeAtualizacao, 
                    string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaCadastroSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaCadastroSociedadeAsync(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdSociedadeAtualizacao, 
                    string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaSociedadePrimeiroAcesso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDadosCadastraisaSociedadePrimeiroAcesso(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaSociedadePrimeiroAcesso", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDadosCadastraisaSociedadePrimeiroAcessoAsync(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaAdvogadosPrimeiroAcesso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsDadosCadastraisaAdvogadosPrimeiroAcesso(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsDadosCadastraisaAdvogadosPrimeiroAcesso", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsDadosCadastraisaAdvogadosPrimeiroAcessoAsync(string registroConsAtual, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaMobileHabDesAdvogado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaMobileHabDesAdvogado(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaMobileHabDesAdvogado", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaMobileHabDesAdvogadoAsync(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaMobileHabDesSociedade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaMobileHabDesSociedade(string idsociedade, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaMobileHabDesSociedade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaMobileHabDesSociedadeAsync(string idsociedade, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaMobileHabDesGrupo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaMobileHabDesGrupo(string idsociedade, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaMobileHabDesGrupo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaMobileHabDesGrupoAsync(string idsociedade, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsertAdvogadoTokenADV(string idAdvogado, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADV", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVAsync(string idAdvogado, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADVAndroid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsertAdvogadoTokenADVAndroid(string idAdvogado, string Token, string Sistema, string UDID, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADVAndroid", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVAndroidAsync(string idAdvogado, string Token, string Sistema, string UDID, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenSOC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsertAdvogadoTokenSOC(string idSociedade, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenSOC", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenSOCAsync(string idSociedade, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenGRU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsertAdvogadoTokenGRU(string idSociedade, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenGRU", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenGRUAsync(string idSociedade, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaBadge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaBadge(string device, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaBadge", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaBadgeAsync(string device, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsPushNotifications", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsPushNotifications(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsPushNotifications", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsPushNotificationsAsync(string idAdvogado, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADVIOSESA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsertAdvogadoTokenADVIOSESA(string idAdvogado, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADVIOSESA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVIOSESAAsync(string idAdvogado, string Token, string Sistema, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADVAndroidESA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsertAdvogadoTokenADVAndroidESA(string idAdvogado, string Token, string Sistema, string UDID, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsertAdvogadoTokenADVAndroidESA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVAndroidESAAsync(string idAdvogado, string Token, string Sistema, string UDID, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaBadgeESA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsAtualizaBadgeESA(string device, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsAtualizaBadgeESA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsAtualizaBadgeESAAsync(string device, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsereMensagemAplicativoESA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string wsInsereMensagemAplicativoESA(string CPF, string Mensagem, string chave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microsoft.com/webservices/wsInsereMensagemAplicativoESA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> wsInsereMensagemAplicativoESAAsync(string CPF, string Mensagem, string chave);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsLoginLanServerOAB", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsLoginLanServerOABRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public string nomeDeUsuario;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public string senha;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=2)]
        public string subSecao;
        
        public wsLoginLanServerOABRequest() {
        }
        
        public wsLoginLanServerOABRequest(string nomeDeUsuario, string senha, string subSecao) {
            this.nomeDeUsuario = nomeDeUsuario;
            this.senha = senha;
            this.subSecao = subSecao;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsLoginLanServerOABResponse", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsLoginLanServerOABResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public int wsLoginLanServerOABResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public int admin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=2)]
        public bool hasRows;
        
        public wsLoginLanServerOABResponse() {
        }
        
        public wsLoginLanServerOABResponse(int wsLoginLanServerOABResult, int admin, bool hasRows) {
            this.wsLoginLanServerOABResult = wsLoginLanServerOABResult;
            this.admin = admin;
            this.hasRows = hasRows;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsCadastrarUsuarioLanServerOAB", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsCadastrarUsuarioLanServerOABRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public string nomeDeUsuario;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public string senha;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=2)]
        public string subSecao;
        
        public wsCadastrarUsuarioLanServerOABRequest() {
        }
        
        public wsCadastrarUsuarioLanServerOABRequest(string nomeDeUsuario, string senha, string subSecao) {
            this.nomeDeUsuario = nomeDeUsuario;
            this.senha = senha;
            this.subSecao = subSecao;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsCadastrarUsuarioLanServerOABResponse", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsCadastrarUsuarioLanServerOABResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public string wsCadastrarUsuarioLanServerOABResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public bool hasRows;
        
        public wsCadastrarUsuarioLanServerOABResponse() {
        }
        
        public wsCadastrarUsuarioLanServerOABResponse(string wsCadastrarUsuarioLanServerOABResult, bool hasRows) {
            this.wsCadastrarUsuarioLanServerOABResult = wsCadastrarUsuarioLanServerOABResult;
            this.hasRows = hasRows;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsBuscarTempoSessaoMaquinas", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsBuscarTempoSessaoMaquinasRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public string nomeMaquina;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public string IPCliente;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=2)]
        public string subSecao;
        
        public wsBuscarTempoSessaoMaquinasRequest() {
        }
        
        public wsBuscarTempoSessaoMaquinasRequest(string nomeMaquina, string IPCliente, string subSecao) {
            this.nomeMaquina = nomeMaquina;
            this.IPCliente = IPCliente;
            this.subSecao = subSecao;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsBuscarTempoSessaoMaquinasResponse", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsBuscarTempoSessaoMaquinasResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public string wsBuscarTempoSessaoMaquinasResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public string valor;
        
        public wsBuscarTempoSessaoMaquinasResponse() {
        }
        
        public wsBuscarTempoSessaoMaquinasResponse(string wsBuscarTempoSessaoMaquinasResult, string valor) {
            this.wsBuscarTempoSessaoMaquinasResult = wsBuscarTempoSessaoMaquinasResult;
            this.valor = valor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsConfigurarSessao", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsConfigurarSessaoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public int minutosSessao;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public string numeroMaquina;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=2)]
        public string subSecao;
        
        public wsConfigurarSessaoRequest() {
        }
        
        public wsConfigurarSessaoRequest(int minutosSessao, string numeroMaquina, string subSecao) {
            this.minutosSessao = minutosSessao;
            this.numeroMaquina = numeroMaquina;
            this.subSecao = subSecao;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsConfigurarSessaoResponse", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsConfigurarSessaoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public bool wsConfigurarSessaoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public int minutosSessaoAtualizada;
        
        public wsConfigurarSessaoResponse() {
        }
        
        public wsConfigurarSessaoResponse(bool wsConfigurarSessaoResult, int minutosSessaoAtualizada) {
            this.wsConfigurarSessaoResult = wsConfigurarSessaoResult;
            this.minutosSessaoAtualizada = minutosSessaoAtualizada;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsCadastrarSubSecao", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsCadastrarSubSecaoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public string nomeSubSecao;
        
        public wsCadastrarSubSecaoRequest() {
        }
        
        public wsCadastrarSubSecaoRequest(string nomeSubSecao) {
            this.nomeSubSecao = nomeSubSecao;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsCadastrarSubSecaoResponse", WrapperNamespace="http://microsoft.com/webservices/", IsWrapped=true)]
    public partial class wsCadastrarSubSecaoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=0)]
        public bool wsCadastrarSubSecaoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://microsoft.com/webservices/", Order=1)]
        public bool subSecaoExistente;
        
        public wsCadastrarSubSecaoResponse() {
        }
        
        public wsCadastrarSubSecaoResponse(bool wsCadastrarSubSecaoResult, bool subSecaoExistente) {
            this.wsCadastrarSubSecaoResult = wsCadastrarSubSecaoResult;
            this.subSecaoExistente = subSecaoExistente;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : MaisUmaTentativaServer.ServiceReference1.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<MaisUmaTentativaServer.ServiceReference1.ServiceSoap>, MaisUmaTentativaServer.ServiceReference1.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string wsAutenticaAdvogado(string login, string senha, string chave) {
            return base.Channel.wsAutenticaAdvogado(login, senha, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAutenticaAdvogadoAsync(string login, string senha, string chave) {
            return base.Channel.wsAutenticaAdvogadoAsync(login, senha, chave);
        }
        
        public string wsAutenticaSociedade(string login, string senha, string chave) {
            return base.Channel.wsAutenticaSociedade(login, senha, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAutenticaSociedadeAsync(string login, string senha, string chave) {
            return base.Channel.wsAutenticaSociedadeAsync(login, senha, chave);
        }
        
        public string wsAutenticagrupo(string login, string senha, string chave) {
            return base.Channel.wsAutenticagrupo(login, senha, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAutenticagrupoAsync(string login, string senha, string chave) {
            return base.Channel.wsAutenticagrupoAsync(login, senha, chave);
        }
        
        public string wsDadosCadastraisaSociedade(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaSociedade(registroConsAtual, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsDadosCadastraisaSociedadeAsync(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaSociedadeAsync(registroConsAtual, chave);
        }
        
        public string wsDadosCadastraisaGrupos(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaGrupos(registroConsAtual, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsDadosCadastraisaGruposAsync(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaGruposAsync(registroConsAtual, chave);
        }
        
        public string wsDadosCadastraisaAdvogados(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaAdvogados(registroConsAtual, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsDadosCadastraisaAdvogadosAsync(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaAdvogadosAsync(registroConsAtual, chave);
        }
        
        public string wsNoticias(string chave) {
            return base.Channel.wsNoticias(chave);
        }
        
        public System.Threading.Tasks.Task<string> wsNoticiasAsync(string chave) {
            return base.Channel.wsNoticiasAsync(chave);
        }
        
        public string wsQuantNotasExpAdvogado(string idAdvogado, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsQuantNotasExpAdvogado(idAdvogado, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsQuantNotasExpAdvogadoAsync(string idAdvogado, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsQuantNotasExpAdvogadoAsync(idAdvogado, dtIncial, dtFinal, chave);
        }
        
        public string wsCidades(string chave, string siglaUF) {
            return base.Channel.wsCidades(chave, siglaUF);
        }
        
        public System.Threading.Tasks.Task<string> wsCidadesAsync(string chave, string siglaUF) {
            return base.Channel.wsCidadesAsync(chave, siglaUF);
        }
        
        public string wsEstados(string chave) {
            return base.Channel.wsEstados(chave);
        }
        
        public System.Threading.Tasks.Task<string> wsEstadosAsync(string chave) {
            return base.Channel.wsEstadosAsync(chave);
        }
        
        public string wsQuantNotasExpSociedade(string idSociedade, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsQuantNotasExpSociedade(idSociedade, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsQuantNotasExpSociedadeAsync(string idSociedade, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsQuantNotasExpSociedadeAsync(idSociedade, dtIncial, dtFinal, chave);
        }
        
        public string wsQuantNotasExpGrupo(string idSociedade, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsQuantNotasExpGrupo(idSociedade, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsQuantNotasExpGrupoAsync(string idSociedade, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsQuantNotasExpGrupoAsync(idSociedade, dtIncial, dtFinal, chave);
        }
        
        public string wsReceberTribunaisAdvogado(string idAdvogado, string chave) {
            return base.Channel.wsReceberTribunaisAdvogado(idAdvogado, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsReceberTribunaisAdvogadoAsync(string idAdvogado, string chave) {
            return base.Channel.wsReceberTribunaisAdvogadoAsync(idAdvogado, chave);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABResponse MaisUmaTentativaServer.ServiceReference1.ServiceSoap.wsLoginLanServerOAB(MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABRequest request) {
            return base.Channel.wsLoginLanServerOAB(request);
        }
        
        public int wsLoginLanServerOAB(string nomeDeUsuario, string senha, string subSecao, out int admin, out bool hasRows) {
            MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABRequest inValue = new MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABRequest();
            inValue.nomeDeUsuario = nomeDeUsuario;
            inValue.senha = senha;
            inValue.subSecao = subSecao;
            MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABResponse retVal = ((MaisUmaTentativaServer.ServiceReference1.ServiceSoap)(this)).wsLoginLanServerOAB(inValue);
            admin = retVal.admin;
            hasRows = retVal.hasRows;
            return retVal.wsLoginLanServerOABResult;
        }
        
        public System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABResponse> wsLoginLanServerOABAsync(MaisUmaTentativaServer.ServiceReference1.wsLoginLanServerOABRequest request) {
            return base.Channel.wsLoginLanServerOABAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABResponse MaisUmaTentativaServer.ServiceReference1.ServiceSoap.wsCadastrarUsuarioLanServerOAB(MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABRequest request) {
            return base.Channel.wsCadastrarUsuarioLanServerOAB(request);
        }
        
        public string wsCadastrarUsuarioLanServerOAB(string nomeDeUsuario, string senha, string subSecao, out bool hasRows) {
            MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABRequest inValue = new MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABRequest();
            inValue.nomeDeUsuario = nomeDeUsuario;
            inValue.senha = senha;
            inValue.subSecao = subSecao;
            MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABResponse retVal = ((MaisUmaTentativaServer.ServiceReference1.ServiceSoap)(this)).wsCadastrarUsuarioLanServerOAB(inValue);
            hasRows = retVal.hasRows;
            return retVal.wsCadastrarUsuarioLanServerOABResult;
        }
        
        public System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABResponse> wsCadastrarUsuarioLanServerOABAsync(MaisUmaTentativaServer.ServiceReference1.wsCadastrarUsuarioLanServerOABRequest request) {
            return base.Channel.wsCadastrarUsuarioLanServerOABAsync(request);
        }
        
        public string wsCadastrarMaquinaLanServerOAB(string IPmaquina, string subSecao, string txtTempoSessao, int statusMaquina, string numeroMaquina) {
            return base.Channel.wsCadastrarMaquinaLanServerOAB(IPmaquina, subSecao, txtTempoSessao, statusMaquina, numeroMaquina);
        }
        
        public System.Threading.Tasks.Task<string> wsCadastrarMaquinaLanServerOABAsync(string IPmaquina, string subSecao, string txtTempoSessao, int statusMaquina, string numeroMaquina) {
            return base.Channel.wsCadastrarMaquinaLanServerOABAsync(IPmaquina, subSecao, txtTempoSessao, statusMaquina, numeroMaquina);
        }
        
        public bool wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanServerOAB(int numeroMaquina, string subSecao) {
            return base.Channel.wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanServerOAB(numeroMaquina, subSecao);
        }
        
        public System.Threading.Tasks.Task<bool> wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanServerOABAsync(int numeroMaquina, string subSecao) {
            return base.Channel.wsDesabilitaOuHabilitaBotaoCadastrarMaquinaLanServerOABAsync(numeroMaquina, subSecao);
        }
        
        public int wsAtualizaTextoElabelsDeStatus(int numeroMaquina, string subSecao) {
            return base.Channel.wsAtualizaTextoElabelsDeStatus(numeroMaquina, subSecao);
        }
        
        public System.Threading.Tasks.Task<int> wsAtualizaTextoElabelsDeStatusAsync(int numeroMaquina, string subSecao) {
            return base.Channel.wsAtualizaTextoElabelsDeStatusAsync(numeroMaquina, subSecao);
        }
        
        public int wsPintaGroupBoxesConformeStatus(string numeroMaquina, string subSecao) {
            return base.Channel.wsPintaGroupBoxesConformeStatus(numeroMaquina, subSecao);
        }
        
        public System.Threading.Tasks.Task<int> wsPintaGroupBoxesConformeStatusAsync(string numeroMaquina, string subSecao) {
            return base.Channel.wsPintaGroupBoxesConformeStatusAsync(numeroMaquina, subSecao);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasResponse MaisUmaTentativaServer.ServiceReference1.ServiceSoap.wsBuscarTempoSessaoMaquinas(MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasRequest request) {
            return base.Channel.wsBuscarTempoSessaoMaquinas(request);
        }
        
        public string wsBuscarTempoSessaoMaquinas(string nomeMaquina, string IPCliente, string subSecao, out string valor) {
            MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasRequest inValue = new MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasRequest();
            inValue.nomeMaquina = nomeMaquina;
            inValue.IPCliente = IPCliente;
            inValue.subSecao = subSecao;
            MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasResponse retVal = ((MaisUmaTentativaServer.ServiceReference1.ServiceSoap)(this)).wsBuscarTempoSessaoMaquinas(inValue);
            valor = retVal.valor;
            return retVal.wsBuscarTempoSessaoMaquinasResult;
        }
        
        public System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasResponse> wsBuscarTempoSessaoMaquinasAsync(MaisUmaTentativaServer.ServiceReference1.wsBuscarTempoSessaoMaquinasRequest request) {
            return base.Channel.wsBuscarTempoSessaoMaquinasAsync(request);
        }
        
        public int wsSinalizarMaquinasInicioSessao(int updateStatusMaquina, string maquina, string subSecao) {
            return base.Channel.wsSinalizarMaquinasInicioSessao(updateStatusMaquina, maquina, subSecao);
        }
        
        public System.Threading.Tasks.Task<int> wsSinalizarMaquinasInicioSessaoAsync(int updateStatusMaquina, string maquina, string subSecao) {
            return base.Channel.wsSinalizarMaquinasInicioSessaoAsync(updateStatusMaquina, maquina, subSecao);
        }
        
        public string wsBuscarNumeroMaquina(string IPCliente, string subSecao) {
            return base.Channel.wsBuscarNumeroMaquina(IPCliente, subSecao);
        }
        
        public System.Threading.Tasks.Task<string> wsBuscarNumeroMaquinaAsync(string IPCliente, string subSecao) {
            return base.Channel.wsBuscarNumeroMaquinaAsync(IPCliente, subSecao);
        }
        
        public int wsSinalizarMaquinasFimSessao(int updateStatusMaquina, string maquina, string subSecao) {
            return base.Channel.wsSinalizarMaquinasFimSessao(updateStatusMaquina, maquina, subSecao);
        }
        
        public System.Threading.Tasks.Task<int> wsSinalizarMaquinasFimSessaoAsync(int updateStatusMaquina, string maquina, string subSecao) {
            return base.Channel.wsSinalizarMaquinasFimSessaoAsync(updateStatusMaquina, maquina, subSecao);
        }
        
        public void wsAtualizarIPservidor(string subSecao, string IPServidorSubSecao) {
            base.Channel.wsAtualizarIPservidor(subSecao, IPServidorSubSecao);
        }
        
        public System.Threading.Tasks.Task wsAtualizarIPservidorAsync(string subSecao, string IPServidorSubSecao) {
            return base.Channel.wsAtualizarIPservidorAsync(subSecao, IPServidorSubSecao);
        }
        
        public string[] wsListagemDeMaquinas(string subSecao) {
            return base.Channel.wsListagemDeMaquinas(subSecao);
        }
        
        public System.Threading.Tasks.Task<string[]> wsListagemDeMaquinasAsync(string subSecao) {
            return base.Channel.wsListagemDeMaquinasAsync(subSecao);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoResponse MaisUmaTentativaServer.ServiceReference1.ServiceSoap.wsConfigurarSessao(MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoRequest request) {
            return base.Channel.wsConfigurarSessao(request);
        }
        
        public bool wsConfigurarSessao(int minutosSessao, string numeroMaquina, string subSecao, out int minutosSessaoAtualizada) {
            MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoRequest inValue = new MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoRequest();
            inValue.minutosSessao = minutosSessao;
            inValue.numeroMaquina = numeroMaquina;
            inValue.subSecao = subSecao;
            MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoResponse retVal = ((MaisUmaTentativaServer.ServiceReference1.ServiceSoap)(this)).wsConfigurarSessao(inValue);
            minutosSessaoAtualizada = retVal.minutosSessaoAtualizada;
            return retVal.wsConfigurarSessaoResult;
        }
        
        public System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoResponse> wsConfigurarSessaoAsync(MaisUmaTentativaServer.ServiceReference1.wsConfigurarSessaoRequest request) {
            return base.Channel.wsConfigurarSessaoAsync(request);
        }
        
        public string wsDescobrirServidorAtualizarDados(string subSecao, string IPClient, string nomeMaquina) {
            return base.Channel.wsDescobrirServidorAtualizarDados(subSecao, IPClient, nomeMaquina);
        }
        
        public System.Threading.Tasks.Task<string> wsDescobrirServidorAtualizarDadosAsync(string subSecao, string IPClient, string nomeMaquina) {
            return base.Channel.wsDescobrirServidorAtualizarDadosAsync(subSecao, IPClient, nomeMaquina);
        }
        
        public void wsNomearMaquina(string nomeMaquina, string maquinaIP, string subSecao) {
            base.Channel.wsNomearMaquina(nomeMaquina, maquinaIP, subSecao);
        }
        
        public System.Threading.Tasks.Task wsNomearMaquinaAsync(string nomeMaquina, string maquinaIP, string subSecao) {
            return base.Channel.wsNomearMaquinaAsync(nomeMaquina, maquinaIP, subSecao);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoResponse MaisUmaTentativaServer.ServiceReference1.ServiceSoap.wsCadastrarSubSecao(MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoRequest request) {
            return base.Channel.wsCadastrarSubSecao(request);
        }
        
        public bool wsCadastrarSubSecao(string nomeSubSecao, out bool subSecaoExistente) {
            MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoRequest inValue = new MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoRequest();
            inValue.nomeSubSecao = nomeSubSecao;
            MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoResponse retVal = ((MaisUmaTentativaServer.ServiceReference1.ServiceSoap)(this)).wsCadastrarSubSecao(inValue);
            subSecaoExistente = retVal.subSecaoExistente;
            return retVal.wsCadastrarSubSecaoResult;
        }
        
        public System.Threading.Tasks.Task<MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoResponse> wsCadastrarSubSecaoAsync(MaisUmaTentativaServer.ServiceReference1.wsCadastrarSubSecaoRequest request) {
            return base.Channel.wsCadastrarSubSecaoAsync(request);
        }
        
        public string[] wsListagemDeSubSecoes() {
            return base.Channel.wsListagemDeSubSecoes();
        }
        
        public System.Threading.Tasks.Task<string[]> wsListagemDeSubSecoesAsync() {
            return base.Channel.wsListagemDeSubSecoesAsync();
        }
        
        public string[] wsListagemDeUsuarios() {
            return base.Channel.wsListagemDeUsuarios();
        }
        
        public System.Threading.Tasks.Task<string[]> wsListagemDeUsuariosAsync() {
            return base.Channel.wsListagemDeUsuariosAsync();
        }
        
        public bool wsExcluirSubSecao(string subSecao) {
            return base.Channel.wsExcluirSubSecao(subSecao);
        }
        
        public System.Threading.Tasks.Task<bool> wsExcluirSubSecaoAsync(string subSecao) {
            return base.Channel.wsExcluirSubSecaoAsync(subSecao);
        }
        
        public bool wsExcluirUsuario(string nomeUsuario, string subSecao) {
            return base.Channel.wsExcluirUsuario(nomeUsuario, subSecao);
        }
        
        public System.Threading.Tasks.Task<bool> wsExcluirUsuarioAsync(string nomeUsuario, string subSecao) {
            return base.Channel.wsExcluirUsuarioAsync(nomeUsuario, subSecao);
        }
        
        public string wsReceberEmailsAdvogado(string idAdvogado, string chave) {
            return base.Channel.wsReceberEmailsAdvogado(idAdvogado, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsReceberEmailsAdvogadoAsync(string idAdvogado, string chave) {
            return base.Channel.wsReceberEmailsAdvogadoAsync(idAdvogado, chave);
        }
        
        public string wsNotasExpedienteAdvogado(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsNotasExpedienteAdvogado(idAdvogado, idTribunal, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsNotasExpedienteAdvogadoAsync(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsNotasExpedienteAdvogadoAsync(idAdvogado, idTribunal, dtIncial, dtFinal, chave);
        }
        
        public string wsDigital(string NumeroOAB, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsDigital(NumeroOAB, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsDigitalAsync(string NumeroOAB, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsDigitalAsync(NumeroOAB, dtIncial, dtFinal, chave);
        }
        
        public string wsNotasExpedienteAdvogadoPaginacao(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum) {
            return base.Channel.wsNotasExpedienteAdvogadoPaginacao(idAdvogado, idTribunal, dtIncial, dtFinal, chave, RowsPerPage, PageNum);
        }
        
        public System.Threading.Tasks.Task<string> wsNotasExpedienteAdvogadoPaginacaoAsync(string idAdvogado, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum) {
            return base.Channel.wsNotasExpedienteAdvogadoPaginacaoAsync(idAdvogado, idTribunal, dtIncial, dtFinal, chave, RowsPerPage, PageNum);
        }
        
        public string wsNotasExpedienteSociedade(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsNotasExpedienteSociedade(idSociedade, idTribunal, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsNotasExpedienteSociedadeAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsNotasExpedienteSociedadeAsync(idSociedade, idTribunal, dtIncial, dtFinal, chave);
        }
        
        public string wsNotasExpedienteSociedadePaginacao(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum) {
            return base.Channel.wsNotasExpedienteSociedadePaginacao(idSociedade, idTribunal, dtIncial, dtFinal, chave, RowsPerPage, PageNum);
        }
        
        public System.Threading.Tasks.Task<string> wsNotasExpedienteSociedadePaginacaoAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum) {
            return base.Channel.wsNotasExpedienteSociedadePaginacaoAsync(idSociedade, idTribunal, dtIncial, dtFinal, chave, RowsPerPage, PageNum);
        }
        
        public string wsNotasExpedienteGrupo(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsNotasExpedienteGrupo(idSociedade, idTribunal, dtIncial, dtFinal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsNotasExpedienteGrupoAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave) {
            return base.Channel.wsNotasExpedienteGrupoAsync(idSociedade, idTribunal, dtIncial, dtFinal, chave);
        }
        
        public string wsNotasExpedienteGrupoPaginacao(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum) {
            return base.Channel.wsNotasExpedienteGrupoPaginacao(idSociedade, idTribunal, dtIncial, dtFinal, chave, RowsPerPage, PageNum);
        }
        
        public System.Threading.Tasks.Task<string> wsNotasExpedienteGrupoPaginacaoAsync(string idSociedade, string idTribunal, string dtIncial, string dtFinal, string chave, int RowsPerPage, int PageNum) {
            return base.Channel.wsNotasExpedienteGrupoPaginacaoAsync(idSociedade, idTribunal, dtIncial, dtFinal, chave, RowsPerPage, PageNum);
        }
        
        public string wsAtualizaPrimeiroAcessoAdvogado(string idAdvogado, string chave) {
            return base.Channel.wsAtualizaPrimeiroAcessoAdvogado(idAdvogado, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaPrimeiroAcessoAdvogadoAsync(string idAdvogado, string chave) {
            return base.Channel.wsAtualizaPrimeiroAcessoAdvogadoAsync(idAdvogado, chave);
        }
        
        public string wsAtualizaPrimeiroAcessoSociedade(string idSociedade, string chave) {
            return base.Channel.wsAtualizaPrimeiroAcessoSociedade(idSociedade, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaPrimeiroAcessoSociedadeAsync(string idSociedade, string chave) {
            return base.Channel.wsAtualizaPrimeiroAcessoSociedadeAsync(idSociedade, chave);
        }
        
        public string wsAtualizaReceberTribunalAdvogado(string idAdvogado, string trueORfalse, string listaIdTribunal, string chave) {
            return base.Channel.wsAtualizaReceberTribunalAdvogado(idAdvogado, trueORfalse, listaIdTribunal, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaReceberTribunalAdvogadoAsync(string idAdvogado, string trueORfalse, string listaIdTribunal, string chave) {
            return base.Channel.wsAtualizaReceberTribunalAdvogadoAsync(idAdvogado, trueORfalse, listaIdTribunal, chave);
        }
        
        public string wsAtualizaReceberEmailAdvogado(string idAdvogado, string idEmailAdvogado, string comando, string email, string chave) {
            return base.Channel.wsAtualizaReceberEmailAdvogado(idAdvogado, idEmailAdvogado, comando, email, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaReceberEmailAdvogadoAsync(string idAdvogado, string idEmailAdvogado, string comando, string email, string chave) {
            return base.Channel.wsAtualizaReceberEmailAdvogadoAsync(idAdvogado, idEmailAdvogado, comando, email, chave);
        }
        
        public string wsAtualizaDevice(string idAdvogado, string idSociedade, string token, string UDID, string comando, string chave) {
            return base.Channel.wsAtualizaDevice(idAdvogado, idSociedade, token, UDID, comando, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaDeviceAsync(string idAdvogado, string idSociedade, string token, string UDID, string comando, string chave) {
            return base.Channel.wsAtualizaDeviceAsync(idAdvogado, idSociedade, token, UDID, comando, chave);
        }
        
        public string wsAtualizaCadastroAdvogado(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdAdvogadoAtualizacao, 
                    string chave) {
            return base.Channel.wsAtualizaCadastroAdvogado(CategoriaAtual, NomeProfissional, RegistroConselhoAtual, EnderecoEMail, TelefoneCelular, LogradouroComercial, NumeroComercial, ComplementoComercial, BairroComercial, CEPComercial, TelefoneTrab, MalaDiretaTrabalho, CorrespondenciaTrabalho, DivulgacaoWEBTrabalho, LogradouroResidencial, NumeroResidencial, ComplementoResidencial, BairroResidencial, CEPResidencial, TelefoneResid, MalaDiretaResidencial, CorrespondenciaResidencial, DivulgacaoWEBResidencial, IdCidadeComercial, IdCidadeResidencial, IdEstadoComercial, IdEstadoResidencial, IdAdvogadoAtualizacao, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaCadastroAdvogadoAsync(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdAdvogadoAtualizacao, 
                    string chave) {
            return base.Channel.wsAtualizaCadastroAdvogadoAsync(CategoriaAtual, NomeProfissional, RegistroConselhoAtual, EnderecoEMail, TelefoneCelular, LogradouroComercial, NumeroComercial, ComplementoComercial, BairroComercial, CEPComercial, TelefoneTrab, MalaDiretaTrabalho, CorrespondenciaTrabalho, DivulgacaoWEBTrabalho, LogradouroResidencial, NumeroResidencial, ComplementoResidencial, BairroResidencial, CEPResidencial, TelefoneResid, MalaDiretaResidencial, CorrespondenciaResidencial, DivulgacaoWEBResidencial, IdCidadeComercial, IdCidadeResidencial, IdEstadoComercial, IdEstadoResidencial, IdAdvogadoAtualizacao, chave);
        }
        
        public string wsAtualizaCadastroSociedade(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdSociedadeAtualizacao, 
                    string chave) {
            return base.Channel.wsAtualizaCadastroSociedade(CategoriaAtual, NomeProfissional, RegistroConselhoAtual, EnderecoEMail, TelefoneCelular, LogradouroComercial, NumeroComercial, ComplementoComercial, BairroComercial, CEPComercial, TelefoneTrab, MalaDiretaTrabalho, CorrespondenciaTrabalho, DivulgacaoWEBTrabalho, LogradouroResidencial, NumeroResidencial, ComplementoResidencial, BairroResidencial, CEPResidencial, TelefoneResid, MalaDiretaResidencial, CorrespondenciaResidencial, DivulgacaoWEBResidencial, IdCidadeComercial, IdCidadeResidencial, IdEstadoComercial, IdEstadoResidencial, IdSociedadeAtualizacao, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaCadastroSociedadeAsync(
                    string CategoriaAtual, 
                    string NomeProfissional, 
                    string RegistroConselhoAtual, 
                    string EnderecoEMail, 
                    string TelefoneCelular, 
                    string LogradouroComercial, 
                    string NumeroComercial, 
                    string ComplementoComercial, 
                    string BairroComercial, 
                    string CEPComercial, 
                    string TelefoneTrab, 
                    string MalaDiretaTrabalho, 
                    string CorrespondenciaTrabalho, 
                    string DivulgacaoWEBTrabalho, 
                    string LogradouroResidencial, 
                    string NumeroResidencial, 
                    string ComplementoResidencial, 
                    string BairroResidencial, 
                    string CEPResidencial, 
                    string TelefoneResid, 
                    string MalaDiretaResidencial, 
                    string CorrespondenciaResidencial, 
                    string DivulgacaoWEBResidencial, 
                    string IdCidadeComercial, 
                    string IdCidadeResidencial, 
                    string IdEstadoComercial, 
                    string IdEstadoResidencial, 
                    int IdSociedadeAtualizacao, 
                    string chave) {
            return base.Channel.wsAtualizaCadastroSociedadeAsync(CategoriaAtual, NomeProfissional, RegistroConselhoAtual, EnderecoEMail, TelefoneCelular, LogradouroComercial, NumeroComercial, ComplementoComercial, BairroComercial, CEPComercial, TelefoneTrab, MalaDiretaTrabalho, CorrespondenciaTrabalho, DivulgacaoWEBTrabalho, LogradouroResidencial, NumeroResidencial, ComplementoResidencial, BairroResidencial, CEPResidencial, TelefoneResid, MalaDiretaResidencial, CorrespondenciaResidencial, DivulgacaoWEBResidencial, IdCidadeComercial, IdCidadeResidencial, IdEstadoComercial, IdEstadoResidencial, IdSociedadeAtualizacao, chave);
        }
        
        public string wsDadosCadastraisaSociedadePrimeiroAcesso(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaSociedadePrimeiroAcesso(registroConsAtual, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsDadosCadastraisaSociedadePrimeiroAcessoAsync(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaSociedadePrimeiroAcessoAsync(registroConsAtual, chave);
        }
        
        public string wsDadosCadastraisaAdvogadosPrimeiroAcesso(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaAdvogadosPrimeiroAcesso(registroConsAtual, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsDadosCadastraisaAdvogadosPrimeiroAcessoAsync(string registroConsAtual, string chave) {
            return base.Channel.wsDadosCadastraisaAdvogadosPrimeiroAcessoAsync(registroConsAtual, chave);
        }
        
        public string wsAtualizaMobileHabDesAdvogado(string idAdvogado, string chave) {
            return base.Channel.wsAtualizaMobileHabDesAdvogado(idAdvogado, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaMobileHabDesAdvogadoAsync(string idAdvogado, string chave) {
            return base.Channel.wsAtualizaMobileHabDesAdvogadoAsync(idAdvogado, chave);
        }
        
        public string wsAtualizaMobileHabDesSociedade(string idsociedade, string chave) {
            return base.Channel.wsAtualizaMobileHabDesSociedade(idsociedade, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaMobileHabDesSociedadeAsync(string idsociedade, string chave) {
            return base.Channel.wsAtualizaMobileHabDesSociedadeAsync(idsociedade, chave);
        }
        
        public string wsAtualizaMobileHabDesGrupo(string idsociedade, string chave) {
            return base.Channel.wsAtualizaMobileHabDesGrupo(idsociedade, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaMobileHabDesGrupoAsync(string idsociedade, string chave) {
            return base.Channel.wsAtualizaMobileHabDesGrupoAsync(idsociedade, chave);
        }
        
        public string wsInsertAdvogadoTokenADV(string idAdvogado, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADV(idAdvogado, Token, Sistema, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVAsync(string idAdvogado, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVAsync(idAdvogado, Token, Sistema, chave);
        }
        
        public string wsInsertAdvogadoTokenADVAndroid(string idAdvogado, string Token, string Sistema, string UDID, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVAndroid(idAdvogado, Token, Sistema, UDID, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVAndroidAsync(string idAdvogado, string Token, string Sistema, string UDID, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVAndroidAsync(idAdvogado, Token, Sistema, UDID, chave);
        }
        
        public string wsInsertAdvogadoTokenSOC(string idSociedade, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenSOC(idSociedade, Token, Sistema, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenSOCAsync(string idSociedade, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenSOCAsync(idSociedade, Token, Sistema, chave);
        }
        
        public string wsInsertAdvogadoTokenGRU(string idSociedade, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenGRU(idSociedade, Token, Sistema, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenGRUAsync(string idSociedade, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenGRUAsync(idSociedade, Token, Sistema, chave);
        }
        
        public string wsAtualizaBadge(string device, string chave) {
            return base.Channel.wsAtualizaBadge(device, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaBadgeAsync(string device, string chave) {
            return base.Channel.wsAtualizaBadgeAsync(device, chave);
        }
        
        public string wsPushNotifications(string idAdvogado, string chave) {
            return base.Channel.wsPushNotifications(idAdvogado, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsPushNotificationsAsync(string idAdvogado, string chave) {
            return base.Channel.wsPushNotificationsAsync(idAdvogado, chave);
        }
        
        public string wsInsertAdvogadoTokenADVIOSESA(string idAdvogado, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVIOSESA(idAdvogado, Token, Sistema, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVIOSESAAsync(string idAdvogado, string Token, string Sistema, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVIOSESAAsync(idAdvogado, Token, Sistema, chave);
        }
        
        public string wsInsertAdvogadoTokenADVAndroidESA(string idAdvogado, string Token, string Sistema, string UDID, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVAndroidESA(idAdvogado, Token, Sistema, UDID, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsertAdvogadoTokenADVAndroidESAAsync(string idAdvogado, string Token, string Sistema, string UDID, string chave) {
            return base.Channel.wsInsertAdvogadoTokenADVAndroidESAAsync(idAdvogado, Token, Sistema, UDID, chave);
        }
        
        public string wsAtualizaBadgeESA(string device, string chave) {
            return base.Channel.wsAtualizaBadgeESA(device, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsAtualizaBadgeESAAsync(string device, string chave) {
            return base.Channel.wsAtualizaBadgeESAAsync(device, chave);
        }
        
        public string wsInsereMensagemAplicativoESA(string CPF, string Mensagem, string chave) {
            return base.Channel.wsInsereMensagemAplicativoESA(CPF, Mensagem, chave);
        }
        
        public System.Threading.Tasks.Task<string> wsInsereMensagemAplicativoESAAsync(string CPF, string Mensagem, string chave) {
            return base.Channel.wsInsereMensagemAplicativoESAAsync(CPF, Mensagem, chave);
        }
    }
}
